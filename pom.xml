<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ananya-care-reports</groupId>
    <artifactId>ananya-care-reports</artifactId>
    <packaging>war</packaging>
    <version>1.0.7-SNAPSHOT</version>
    <name>Ananya CARE Reports</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.7</jdk.version>

        <spring.version>3.2.3.RELEASE</spring.version>
        <spring-security.version>3.1.4.RELEASE</spring-security.version>
        <log4j.version>1.2.17</log4j.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <postgres-driver.version>9.1-901.jdbc4</postgres-driver.version>
        <jackson.version>2.2.2</jackson.version>
        <javax-servlet.version>2.5</javax-servlet.version>
        <javax-servlet-jstl.version>1.2</javax-servlet-jstl.version>
        <hibernate.version>4.1.10.Final</hibernate.version>
        <hibernate-validator.version>5.0.1.Final</hibernate-validator.version>
        <c3po.version>0.9.1.2</c3po.version>
        <json-path.version>0.8.1</json-path.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-fileupload.version>1.3</commons-fileupload.version>
        <commons-io.version>2.4</commons-io.version>
        <guava.version>10.0.1</guava.version>
        <liquibase.version>3.0.2</liquibase.version>
        <jetty.version>9.0.4.v20130625</jetty.version>
        <quartz.version>1.8.3</quartz.version>
        <jooq.version>3.1.0</jooq.version>
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.1.4</jaxen.version>
        <opencsv.version>2.0</opencsv.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <joda-time.version>2.3</joda-time.version>
        <ehcache.version>2.6.5</ehcache.version>

        <modules.root.dir>${basedir}</modules.root.dir>

        <maven.test.skip>false</maven.test.skip>
        <check.code.skip>${maven.test.skip}</check.code.skip>
        <findbugs.skip>${check.code.skip}</findbugs.skip>
        <pmd.skip>${check.code.skip}</pmd.skip>
        <checkstyle.skip>${check.code.skip}</checkstyle.skip>
        <test.phase>Default</test.phase>
        <test.create.skip>true</test.create.skip>
        <include.tests>false</include.tests>

        <test.jdbc.driverClassName>org.postgresql.Driver</test.jdbc.driverClassName>
        <test.jdbc.url>jdbc:postgresql://127.0.0.1:5432</test.jdbc.url>
        <test.jdbc.username>postgres</test.jdbc.username>
        <test.jdbc.password>password</test.jdbc.password>
        <test.database>care_reportingtest</test.database>
        <test.performance.database>performancecare_reporting</test.performance.database>

        <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
        <jdbc.url>jdbc:postgresql://127.0.0.1:5432</jdbc.url>
        <jdbc.username>postgres</jdbc.username>
        <jdbc.password>password</jdbc.password>
        <care.database>care_reporting</care.database>
        <care.schema>report</care.schema>
        <care.reporting.schema>dashboard_app</care.reporting.schema>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres-driver.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${javax-servlet.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${javax-servlet-jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3po.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path.version}</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>${jaxen.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons-httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>
    <scm>
        <developerConnection>scm:git:git@github.com:motech/ananya-care-reports.git</developerConnection>
      <tag>HEAD</tag>
  </scm>
    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.7.1</version>
                <configuration>
                    <rulesets>
                        <ruleset>${modules.root.dir}/pmd.xml</ruleset>
                    </rulesets>
                    <includeTests>${include.tests}</includeTests>
                    <targetJdk>${jdk.version}</targetJdk>
                    <skip>${pmd.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <configLocation>${modules.root.dir}/checkstyle.xml</configLocation>
                    <includeTestSourceDirectory>${include.tests}</includeTestSourceDirectory>
                    <enableFilesSummary>true</enableFilesSummary>
                    <failsOnError>true</failsOnError>
                    <consoleOutput>true</consoleOutput>
                    <skip>${checkstyle.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <excludeFilterFile>${modules.root.dir}/findbugs-exclude.xml</excludeFilterFile>
                    <includeFilterFile>${modules.root.dir}/findbugs-include.xml</includeFilterFile>
                    <skip>${findbugs.skip}</skip>
                    <includeTests>${include.tests}</includeTests>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <reload>manual</reload>
                    <httpConnector>
                        <port>8089</port>
                    </httpConnector>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <excludes>
                        <exclude>**/*$*</exclude>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*PT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>

                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgres-driver.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <driver>${test.jdbc.driverClassName}</driver>
                    <url>${test.jdbc.url}</url>
                    <username>${test.jdbc.username}</username>
                    <password>${test.jdbc.password}</password>
                </configuration>

                <executions>

                    <!--  It creates integration test data before running the tests -->
                    <execution>
                        <id>create-integration-test-database</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <sqlCommand>
                                DROP DATABASE IF EXISTS ${test.database};
                                CREATE DATABASE ${test.database};
                            </sqlCommand>
                        </configuration>
                    </execution>

                    <execution>
                        <id>create-integration-test-data</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>${test.jdbc.url}/${test.database}</url>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/db/create_tables.sql</srcFile>
                                <srcFile>src/main/resources/db/insert_level_data.sql</srcFile>
                                <srcFile>src/main/resources/db/insert_initial_data.sql</srcFile>
                                <srcFile>src/main/resources/db/insert_test_data.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>

                </executions>

            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>release</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/main/resources/assembly/release.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>pt</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.12</version>
                        <configuration>
                            <includes>
                                <include>**/${test.phase}PhasePT.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*$*</exclude>
                                <exclude>**/*Test.java</exclude>
                                <exclude>**/*IT.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres-driver.version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <driver>${test.jdbc.driverClassName}</driver>
                            <url>${test.jdbc.url}</url>
                            <username>${test.jdbc.username}</username>
                            <password>${test.jdbc.password}</password>
                        </configuration>

                        <executions>
                            <execution>
                                <id>create-performance-database</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>${test.create.skip}</skip>
                                    <url>${test.jdbc.url}/${test.performance.database}</url>
                                    <autocommit>true</autocommit>
                                    <sqlCommand>
                                        DROP SCHEMA IF EXISTS ${care.reporting.schema} CASCADE;
                                    </sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-tables-and-insert-initial-data</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>${test.create.skip}</skip>
                                    <url>${test.jdbc.url}/${test.performance.database}</url>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>src/main/resources/db/create_tables.sql</srcFile>
                                        <srcFile>src/main/resources/db/insert_level_data.sql</srcFile>
                                        <srcFile>src/main/resources/db/insert_initial_data.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.12</version>
                        <configuration>
                            <excludes>
                                <exclude>**/*$*</exclude>
                                <exclude>**/*PT.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.15</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <encoding>UTF-8</encoding>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>create-database</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres-driver.version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <driver>${jdbc.driverClassName}</driver>
                            <url>${jdbc.url}</url>
                            <username>${jdbc.username}</username>
                            <password>${jdbc.password}</password>
                        </configuration>

                        <executions>
                            <execution>
                                <id>create-database</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>${jdbc.url}/${care.database}</url>
                                    <autocommit>true</autocommit>
                                    <sqlCommand>
                                        DROP SCHEMA IF EXISTS ${care.reporting.schema} CASCADE;
                                    </sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-tables-and-insert-initial-data</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>${jdbc.url}/${care.database}</url>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>src/main/resources/db/create_tables.sql</srcFile>
                                        <srcFile>src/main/resources/db/insert_level_data.sql</srcFile>
                                        <srcFile>src/main/resources/db/insert_area_data.sql</srcFile>
                                        <srcFile>src/main/resources/db/insert_initial_data.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>load-data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres-driver.version}</version>
                            </dependency>
                        </dependencies>

                        <executions>
                            <execution>
                                <id>load-data</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>${jdbc.url}/${care.database}</url>
                                    <driver>${jdbc.driverClassName}</driver>
                                    <username>${jdbc.username}</username>
                                    <password>${jdbc.password}</password>

                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>src/main/resources/db/care_reports.sql</srcFile>
                                    </srcFiles>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>care-repo</id>
            <name>Care Nexus</name>
            <url>http://care.soldevelo.com/nexus/content/repositories/public</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>care-repo</id>
            <name>Care Nexus</name>
            <url>http://care.soldevelo.com/nexus/content/repositories/public</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>care-repo</id>
            <name>Care Releases Repository</name>
            <url>http://care.soldevelo.com/nexus/content/repositories/releases</url>
            <uniqueVersion>false</uniqueVersion>
        </repository>
        <snapshotRepository>
            <id>care-repo</id>
            <name>Care Snapshots Repository</name>
            <url>http://care.soldevelo.com/nexus/content/repositories/snapshots</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <ciManagement>
        <system>Jenkins</system>
        <url>http://care.soldevelo.com/ci/</url>
    </ciManagement>

</project>
